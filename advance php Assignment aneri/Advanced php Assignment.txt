Q1) Oops stands for object oriented programming structured language
oops used to support MVC concepts in php8

Oops used to crate a dynamic web application or website in PHP8 using MVC architecture.
Oops provides security to secured your applications 
Oops used some magic methods 
Ex: __construct, __destruct etc
Oops used to protect your data using access modifier and access specifier 
a)	Public 
b)	Private 
c)	Protected 

Q2) oops Properties

oops support some features 
a)	Class
b)	Object
c)	Inheritance
d)	Polymorphism
e)	Abstract
f)	Encapsulation

Q3) difference between Abstract class and interface

=> Abstract Class

1) Definition: A abstract class is same name of class but we never call the object of abstract class but 
we access abstract with inherited with another class. abstract is used to data hiding process 

2) Abstract Class doesn't support multiple inheritances.

3) They contain Data Members

4) An abstract class contains both abstract and non-abstract members.

5) Abstract class contains constructors.

6) Complete member of an abstract class can be static

7)  It contains access modifiers for the subs, functions, and properties.


=> Interface

1) Definition: An interface allows unrelated classes to implement the same set of methods, regardless of their positions in the class inheritance hierarchy.

2) Interfaces support multiple inheritances.

3) They don't contain data members.

4) The interface contains only abstract members.

5) These don't contain constructors.

6) Members of the interface can not be static.

7)  It doesn't access modifiers, by default everything is public.

Q4) Overloading :

Overloading in PHP provides means to dynamically create properties and methods.

These dynamic entities are processed via magic methods, one can establish in a class for various action types.

All overloading methods must be defined as Public.

After creating object for a class, we can access set of entities that are properties or methods not defined within the scope of the class.

Such entities are said to be overloaded properties or methods, and the process is called as overloading.
For working with these overloaded properties or functions, PHP magic methods are used.

Most of the magic methods will be triggered in object context except __callStatic() method which is used in static context.

OVERLOADING : 

Property overloading :

PHP property overloading allows us to create dynamic properties in object context.

For creating those properties no separate line of code is needed.

A property which is associated with class instance, and not declared within the scope of the class, is considered as overloaded property.

Some of the magic methods which is useful for property overloading.

__set(): It is triggered while initializing overloaded properties.
__get(): It is utilized for reading data from inaccessible Properties.
__isset(): This magic method is invoked when we check overloaded properties with isset() function.
__unset(): This function will be invoked on using PHP unset() for overloaded properties.

Method Overloading : 

Method Overloading means same function with different arguments its called method overloading.
php does not support method overloading 